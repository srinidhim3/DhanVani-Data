name: Process and Summarize NSE Data

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs at the start of every hour.
    - cron: "0 * * * *"

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run data fetcher
        run: python main.py

  check-time:
    runs-on: ubuntu-latest
    outputs:
      run_summarizer: ${{ steps.check_hour.outputs.run_summarizer }}
    steps:
      - name: Check current UTC hour for discount window
        id: check_hour
        run: |
          HOUR=$(date -u +'%H')
          # Discount window is 16:30-00:30 UTC. Cron runs at HH:00.
          # Run at 17, 18, 19, 20, 21, 22, 23, and 00 UTC.
          if (( HOUR >= 17 || HOUR == 0 )); then
            echo "Current hour ($HOUR) is within the discount window. Enabling summarizer job."
            echo "run_summarizer=true" >> $GITHUB_OUTPUT
          else
            echo "Current hour ($HOUR) is outside the discount window. Skipping summarizer job."
            echo "run_summarizer=false" >> $GITHUB_OUTPUT
          fi

  summarize-articles:
    runs-on: ubuntu-latest
    needs: [fetch-data, check-time]
    # Run if manually triggered, OR if it's the right time on a schedule.
    if: github.event_name == 'workflow_dispatch' || needs.check-time.outputs.run_summarizer == 'true'
    env:
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run AI summarizer
        run: python summarize_articles.py